option solver './conopt';
set SV := { 0.03,0.06,0.09,0.12,0.15};
param Entropy{i in SV};
param CodeLength{i in SV};
param TiltedEntropy{i in SV};
param AvgAge{i in SV};
param PAvgAge{i in SV};
param LBAvgAge{i in SV};
param UBAvgAge{i in SV};
param PShannonAge{i in SV};
param CheckOptimal{i in SV};
param CheckP{i in SV};
param CheckTD{i in SV};
param epsilon=0;

param Formatting{i in SV}= '&';
param Formatting_2{i in SV}= '\\';
for{a in SV}{
let mu := a;
solve;
let Entropy[a] := entropy;
let TiltedEntropy[a] := tiltedentropy;
let CodeLength[a] := codelength;
let AvgAge[a] := avgage;
let PAvgAge[a] := pracavgage;
let LBAvgAge[a] := entropy/(1-epsilon)+(mu*entropy^2+mu*epsilon*entropy)/(2*((1-epsilon)^2-(1-epsilon)*mu*entropy));
let UBAvgAge[a] := shannonage;
let PShannonAge[a]:= pshannonage;
let CheckOptimal[a]:=check_optimal;
let CheckP[a]:=sum_p;
let CheckTD[a]:=sum_td;

}
table QZS_op OUT: [SV], Entropy, TiltedEntropy, CodeLength, AvgAge, PAvgAge, LBAvgAge, UBAvgAge, PShannonAge, CheckOptimal, CheckP, CheckTD;
write table QZS_op;
